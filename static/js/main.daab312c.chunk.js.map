{"version":3,"sources":["img/night-broken-clouds.jpg","img/night-rain.jpg","img/no-clouds.jpg","img/few-clouds.jpg","img/broken-clouds.jpg","img/rain-clouds.jpg","img/rain.jpg","img/storm.jpg","img/fog.jpg","img/snow.jpg","img/night-no-clouds.jpg","img/night-few-clouds.jpg","img/night-storm.jpg","img/night-snow.jpg","img/night-fog.jpg","components/Form.js","components/Result.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","react_default","a","createElement","className","onSubmit","submit","type","value","onChange","change","placeholder","Result","_props$weather","weather","err","desc","city","temp","date","sunrise","sunset","pressure","wind","windDeg","icon","temp_max","temp_min","temp1","temp2","temp3","temp4","temp5","temp6","temp7","icon1","icon2","icon3","icon4","icon5","icon6","icon7","tomorrow_date","tomorrow_windDeg","tomorrow_temp","tomorrow_pressure","tomorrow_wind","tomorrow_icon","afterTomorrow_date","afterTomorrow_temp","afterTomorrow_pressure","afterTomorrow_wind","afterTomorrow_windDeg","afterTomorrow_icon","dayAfterTomorrow_date","dayAfterTomorrow_temp","dayAfterTomorrow_pressure","dayAfterTomorrow_wind","dayAfterTomorrow_windDeg","dayAfterTomorrow_icon","console","log","miasto","charAt","toUpperCase","slice","sectionStyle","width","height","backgroundImage","concat","Background__sun","Background__fewClouds","Background__scatteredClouds","Background__brokenClouds","Background__rainClouds","backgroundPosition","backgroundSize","textAlign","hoursSet","n","dt","Date","setHours","getHours","toString","icona","iconset","tomorrow_iconset","afterTomorrow_iconset","dayAfterTomorrow_iconset","content","sunriseTime","toLocaleTimeString","sunsetTime","style","transform","textShadow","src","alt","ApiKey","App","state","time","tomorrow_value","tomorrow_sunrise","tomorrow_sunset","afterTomorrow_value","afterTomorrow_sunrise","afterTomorrow_sunset","dayAfterTomorrow_value","dayAfterTomorrow_sunrise","dayAfterTomorrow_sunset","handleTextChange","e","_this","setState","target","handleCitySubmit","preventDefault","Api","ApiForecast","Promise","all","fetch","then","response","ok","Error","json","toLocaleString","prevState","description","sys","list","dt_txt","main","speed","deg","catch","components_Form","this","components_Result","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.daab312c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/night-broken-clouds.324e4722.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-rain.7e4ee086.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no-clouds.ebb71f41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/few-clouds.ca67daa4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/broken-clouds.3a4b8feb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain-clouds.02d4abae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.01a6bbca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/storm.bb920652.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog.c4e0f6d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.b3fe923d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-no-clouds.621421a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-few-clouds.bb230197.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-storm.d8407dbc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-snow.c812f857.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-fog.2ab0f188.jpg\";","import React from 'react';\r\n\r\nconst Form = props => {\r\n    // let valiue = document.querySelector(\"value\")\r\n    // let po = valiue.toUpperCase()\r\n    return (\r\n        <div className=\"formularz\">\r\n            <form className=\"forms\" onSubmit = {props.submit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={props.value}\r\n                    onChange={props.change}\r\n                    placeholder={'Miasto'}\r\n                />\r\n\r\n                <button>Wyszukaj miasto</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nexport default Form;\r\n","import React from 'react';\r\nimport Background__sun from '../img/no-clouds.jpg';\r\nimport Background__fewClouds from '../img/few-clouds.jpg';\r\nimport Background__scatteredClouds from '../img/broken-clouds.jpg';\r\nimport Background__brokenClouds from '../img/rain-clouds.jpg';\r\nimport Background__rainClouds from '../img/rain.jpg';\r\nimport Background__stormClouds from '../img/storm.jpg';\r\nimport Background__mistClouds from '../img/fog.jpg';\r\nimport Background__snowClouds from '../img/snow.jpg';\r\nimport Background__nightClear from '../img/night-no-clouds.jpg';\r\nimport Background__nightFew from '../img/night-few-clouds.jpg';\r\nimport Background__nightScattered from '../img/night-broken-clouds.jpg';\r\nimport Background__nightRain from '../img/night-rain.jpg';\r\nimport Background__nightStorm from '../img/night-storm.jpg';\r\nimport Background__nightSnow from '../img/night-snow.jpg';\r\nimport Background__nightMist from '../img/night-fog.jpg';\r\n\r\nconst Result = props => {\r\n    const {\r\n        err,\r\n        desc,\r\n        city,\r\n        temp,\r\n        date,\r\n        sunrise,\r\n        sunset,\r\n        pressure,\r\n        wind,\r\n        windDeg,\r\n        icon,\r\n        temp_max,\r\n        temp_min,\r\n        temp1,\r\n        temp2,\r\n        temp3,\r\n        temp4,\r\n        temp5,\r\n        temp6,\r\n        temp7,\r\n        icon1,\r\n        icon2,\r\n        icon3,\r\n        icon4,\r\n        icon5,\r\n        icon6,\r\n        icon7,\r\n        // tomorrow\r\n        tomorrow_date,\r\n        tomorrow_windDeg,\r\n        tomorrow_temp,\r\n        tomorrow_pressure,\r\n        tomorrow_wind,\r\n        tomorrow_icon,\r\n        // aftertomorrow\r\n\r\n        afterTomorrow_date,\r\n\r\n        afterTomorrow_temp,\r\n        afterTomorrow_pressure,\r\n        afterTomorrow_wind,\r\n        afterTomorrow_windDeg,\r\n        afterTomorrow_icon,\r\n        //afteraftertomorrow\r\n\r\n        dayAfterTomorrow_date,\r\n\r\n        dayAfterTomorrow_temp,\r\n        dayAfterTomorrow_pressure,\r\n        dayAfterTomorrow_wind,\r\n        dayAfterTomorrow_windDeg,\r\n        dayAfterTomorrow_icon\r\n    } = props.weather;\r\n    console.log(icon);\r\n\r\n    var miasto = city.charAt(0, 1).toUpperCase() + city.slice(1);\r\n    function bckgChange() {\r\n        let bckg;\r\n        if (icon === '01d') {\r\n            bckg = Background__sun;\r\n        } else if (icon === '02d') {\r\n            bckg = Background__fewClouds;\r\n        } else if (icon === '03d') {\r\n            bckg = Background__scatteredClouds;\r\n        } else if (icon === '04d') {\r\n            bckg = Background__brokenClouds;\r\n        } else if (icon === '09d' || '10d') {\r\n            bckg = Background__rainClouds;\r\n        } else if (icon === '11d') {\r\n            bckg = Background__stormClouds;\r\n        } else if (icon === '13d') {\r\n            bckg = Background__snowClouds;\r\n        } else if (icon === '50d') {\r\n            bckg = Background__mistClouds;\r\n        } else if (icon === '01n') {\r\n            bckg = Background__nightClear;\r\n        } else if (icon === '02n') {\r\n            bckg = Background__nightFew;\r\n        } else if (icon === '03n') {\r\n            bckg = Background__nightScattered;\r\n        }else if (icon === '04n') {\r\n            bckg = Background__nightScattered;\r\n        } else if (icon === '09n') {\r\n            bckg = Background__nightRain;\r\n        } else if (icon === '10n') {\r\n            bckg = Background__nightRain;\r\n        } else if (icon === '11n') {\r\n            bckg = Background__nightStorm;\r\n        } else if (icon === '13n') {\r\n            bckg = Background__nightSnow;\r\n        } else if (icon === '50n') {\r\n            bckg = Background__nightMist;\r\n        }\r\n        return bckg;\r\n    }\r\n\r\n    var sectionStyle = {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundImage: `url(${bckgChange()})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n\r\n        textAlign: 'center'\r\n    };\r\n\r\n    function hoursSet(n) {\r\n        var dt = new Date();\r\n        dt.setHours(dt.getHours() + n);\r\n        var dupa = dt.toString();\r\n        return dupa.slice(16, -47) + ':00';\r\n    }\r\n\r\n    function icona(a) {\r\n        return `http://openweathermap.org/img/w/${a}.png`;\r\n    }\r\n    let iconset = `http://openweathermap.org/img/w/${icon}.png`;\r\n    let tomorrow_iconset = `http://openweathermap.org/img/w/${tomorrow_icon}.png`;\r\n    let afterTomorrow_iconset = `http://openweathermap.org/img/w/${afterTomorrow_icon}.png`;\r\n    let dayAfterTomorrow_iconset = `http://openweathermap.org/img/w/${dayAfterTomorrow_icon}.png`;\r\n    let content = null;\r\n    if (!err && city) {\r\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n        content = (\r\n            <div className=\"content\">\r\n                <div className=\"today__container\">\r\n                    <div className=\"today__back\" style={sectionStyle}>\r\n                        <div className=\"text__container\">\r\n                            <div>\r\n                                <h3>Wyszukiwanie dla miasta {miasto}</h3>\r\n                            </div>\r\n                            <div>Na dzień: {date}</div>\r\n                            <div>\r\n                                temperatura: {temp} &#176;C od {temp_min}{' '}\r\n                                &#176;C do {temp_max} &#176;C\r\n                            </div>\r\n                            <div>{desc}</div>\r\n                            <div>Wschód słońca: {sunriseTime}</div>\r\n                            <div>Zachód słońca: {sunsetTime}</div>\r\n                            <div>\r\n                                Wiatr: {wind} m/s{' '}\r\n                                <i\r\n                                    className=\"fas fa-location-arrow\"\r\n                                    style={{\r\n                                        transform: `rotate(${windDeg -\r\n                                            223}deg)`,\r\n                                        textShadow: '0px 0px 10px #000000'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>Ciśnienie: {pressure} hPa</div>\r\n\r\n                            <div className=\"icon__container\">\r\n                                <img src={iconset} alt=\"djis\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"later__today\">\r\n                        <div className=\"later__today-hours1 align-items\">\r\n                            <div className=\"hours\">{hoursSet(3)}</div>&nbsp;\r\n                            {temp1} &#176;C\r\n                            <img src={icona(icon1)} alt=\"djis\" />\r\n                        </div>\r\n                        <div className=\"later__today-hours2 align-items\">\r\n                            <div className=\"hours\">{hoursSet(6)}</div>&nbsp;\r\n                            {temp2} &#176;C\r\n                            <img src={icona(icon2)} alt=\"djis\" />\r\n                        </div>\r\n                        <div className=\"later__today-hours3 align-items\">\r\n                            <div className=\"hours\">{hoursSet(9)}</div>&nbsp;\r\n                            {temp3} &#176;C\r\n                            <img src={icona(icon3)} alt=\"djis\" />\r\n                        </div>\r\n                        <div className=\"later__today-hours4 align-items\">\r\n                            <div className=\"hours\">{hoursSet(12)}</div>&nbsp;\r\n                            {temp4} &#176;C\r\n                            <img src={icona(icon4)} alt=\"djis\" />\r\n                        </div>\r\n                        <div className=\"later__today-hours5 align-items\">\r\n                            <div className=\"hours\">{hoursSet(15)}</div>&nbsp;\r\n                            {temp5} &#176;C\r\n                            <img src={icona(icon5)} alt=\"djis\" />\r\n                        </div>\r\n                        <div className=\"later__today-hours6 align-items\">\r\n                            <div className=\"hours\">{hoursSet(18)}</div>&nbsp;\r\n                            {temp6} &#176;C\r\n                            <img src={icona(icon6)} alt=\"djis\" />\r\n                        </div>\r\n                        <div className=\"later__today-hours7 align-items\">\r\n                            <div className=\"hours\">{hoursSet(21)}</div>&nbsp;\r\n                            {temp7} &#176;C\r\n                            <img src={icona(icon7)} alt=\"djis\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* tomorrow */}\r\n                <div className=\"next__days\">\r\n                    <div className=\"tomorrow align-items\">\r\n                        <div>Na dzień: {tomorrow_date}</div>\r\n                        <div>temperatura: {tomorrow_temp} &#176;C</div>\r\n\r\n                        <div>\r\n                            Wiatr: {tomorrow_wind} m/s{' '}\r\n                            <i\r\n                                className=\"fas fa-location-arrow\"\r\n                                style={{\r\n                                    transform: `rotate(${tomorrow_windDeg -\r\n                                        223}deg)`\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div>Ciśnienie: {tomorrow_pressure} hPa</div>\r\n                        <div className=\"icon__container\">\r\n                            <img src={tomorrow_iconset} alt=\"djis\" />\r\n                        </div>\r\n                    </div>\r\n                    {/* afterTomorrow */}\r\n                    <div className=\"tomorrow align-items\">\r\n                        <div>Na dzień: {afterTomorrow_date}</div>\r\n                        <div>temperatura: {afterTomorrow_temp} &#176;C</div>\r\n\r\n                        <div>\r\n                            Wiatr: {afterTomorrow_wind} m/s{' '}\r\n                            <i\r\n                                className=\"fas fa-location-arrow\"\r\n                                style={{\r\n                                    transform: `rotate(${afterTomorrow_windDeg -\r\n                                        223}deg)`\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div>Ciśnienie: {afterTomorrow_pressure} hPa</div>\r\n                        <div className=\"icon__container\">\r\n                            <img src={afterTomorrow_iconset} alt=\"djis\" />\r\n                        </div>\r\n                    </div>\r\n                    {/* dayAfterTomorrow */}\r\n                    <div className=\"tomorrow align-items\">\r\n                        <div>Na dzień: {dayAfterTomorrow_date}</div>\r\n                        <div>temperatura: {dayAfterTomorrow_temp} &#176;C</div>\r\n\r\n                        <div>\r\n                            Wiatr: {dayAfterTomorrow_wind} m/s{' '}\r\n                            <i\r\n                                className=\"fas fa-location-arrow\"\r\n                                style={{\r\n                                    transform: `rotate(${dayAfterTomorrow_windDeg -\r\n                                        223}deg)`\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div>Ciśnienie: {dayAfterTomorrow_pressure} hPa</div>\r\n                        <div className=\"icon__container\">\r\n                            <img src={dayAfterTomorrow_iconset} alt=\"djis\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"result\">\r\n            {err ? `Nie mamy w bazie ${city}` : content}\r\n        </div>\r\n    );\r\n};\r\nexport default Result;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './Form';\nimport Result from './Result';\nconst ApiKey = '3f5adde1534ce63dfb72e3180a717319';\nclass App extends Component {\n    state = {\n        desc: '',\n        value: '',\n        date: '',\n        city: '',\n        sunrise: '',\n        sunset: '',\n        temp: '',\n        temp1: '',\n        time: '',\n        temp2: '',\n        temp3: '',\n        temp4: '',\n        temp5: '',\n        temp6: '',\n        temp7: '',\n        pressure: '',\n        wind: '',\n        icon: '',\n        icon1: '',\n        icon2: '',\n        icon3: '',\n        icon4: '',\n        icon5: '',\n        icon6: '',\n        icon7: '',\n\n        err: false,\n        // tomorrow\n        tomorrow_value: '',\n        tomorrow_date: '',\n\n        tomorrow_sunrise: '',\n        tomorrow_sunset: '',\n        tomorrow_temp: '',\n        tomorrow_pressure: '',\n        tomorrow_wind: '',\n        tomorrow_icon: '',\n        // aftertomorrow\n        afterTomorrow_value: '',\n        afterTomorrow_date: '',\n\n        afterTomorrow_sunrise: '',\n        afterTomorrow_sunset: '',\n        afterTomorrow_temp: '',\n        afterTomorrow_pressure: '',\n        afterTomorrow_wind: '',\n        afterTomorrow_icon: '',\n        //afteraftertomorrow\n        dayAfterTomorrow_value: '',\n        dayAfterTomorrow_date: '',\n\n        dayAfterTomorrow_sunrise: '',\n        dayAfterTomorrow_sunset: '',\n        dayAfterTomorrow_temp: '',\n        dayAfterTomorrow_pressure: '',\n        dayAfterTomorrow_wind: '',\n        dayAfterTomorrow_icon: ''\n    };\n\n    handleTextChange = e => {\n        this.setState({\n            value: e.target.value\n        });\n    };\n    handleCitySubmit = e => {\n        e.preventDefault();\n        console.log('lala');\n\n        const Api = `https://api.openweathermap.org/data/2.5/weather?q=${\n            this.state.value\n        }&APPID=${ApiKey}&lang=pl&units=metric`;\n\n        const ApiForecast = `https://api.openweathermap.org/data/2.5/forecast?q=${\n            this.state.value\n        }&APPID=${ApiKey}&lang=pl&units=metric`;\n\n        Promise.all([\n            fetch(Api)\n                .then(response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    throw Error('lipa');\n                })\n                .then(response => response.json()),\n            fetch(ApiForecast)\n                .then(response => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    throw Error('lipa');\n                })\n                .then(response => response.json())\n        ])\n            // .then(response => {\n\n            //             if (response.ok) {\n            //                 return response\n\n            //             }\n            //             throw Error('lipa');\n            //         })\n            //     .then(response => response.json())\n            //     .then(data => {\n            .then(response => {\n                console.log(response);\n                if (response.ok) {\n                    return response;\n                }\n\n                const time = new Date().toLocaleString();\n\n                this.setState(prevState => ({\n                    err: false,\n                    desc: response[0].weather[0].description,\n                    date: time,\n\n                    sunrise: response[0].sys.sunrise,\n                    sunset: response[0].sys.sunset,\n                    time: response[1].list[0].dt_txt,\n                    temp: response[1].list[0].main.temp,\n                    temp1: response[1].list[1].main.temp,\n                    temp2: response[1].list[2].main.temp,\n                    temp3: response[1].list[3].main.temp,\n                    temp4: response[1].list[4].main.temp,\n                    temp5: response[1].list[5].main.temp,\n                    temp6: response[1].list[6].main.temp,\n                    temp7: response[1].list[7].main.temp,\n                    pressure: response[1].list[0].main.pressure,\n                    wind: response[1].list[0].wind.speed,\n                    windDeg: response[1].list[0].wind.deg,\n                    icon: response[0].weather[0].icon,\n                    icon1: response[1].list[1].weather[0].icon,\n                    icon2: response[1].list[2].weather[0].icon,\n                    icon3: response[1].list[3].weather[0].icon,\n                    icon4: response[1].list[4].weather[0].icon,\n                    icon5: response[1].list[5].weather[0].icon,\n                    icon6: response[1].list[6].weather[0].icon,\n                    icon7: response[1].list[7].weather[0].icon,\n                    city: prevState.value,\n                    temp_max: response[1].list[0].main.temp_max,\n                    temp_min: response[1].list[0].main.temp_min,\n                    // tomorrow\n\n                    tomorrow_date: response[1].list[8].dt_txt,\n\n                    tomorrow_temp: response[1].list[8].main.temp,\n\n                    tomorrow_pressure: response[1].list[8].main.pressure,\n                    tomorrow_wind: response[1].list[8].wind.speed,\n                    tomorrow_icon: response[1].list[8].weather[0].icon,\n                    tomorrow_windDeg: response[1].list[8].wind.deg,\n                    // aftertomorrow\n\n                    afterTomorrow_date: response[1].list[16].dt_txt,\n                    afterTomorrow_windDeg: response[1].list[16].wind.deg,\n                    afterTomorrow_temp: response[1].list[16].main.temp,\n                    afterTomorrow_pressure: response[1].list[16].main.pressure,\n                    afterTomorrow_wind: response[1].list[16].wind.speed,\n                    afterTomorrow_icon: response[1].list[16].weather[0].icon,\n                    //afteraftertomorrow\n\n                    dayAfterTomorrow_date: response[1].list[24].dt_txt,\n                    dayAfterTomorrow_windDeg: response[1].list[24].wind.deg,\n                    dayAfterTomorrow_temp: response[1].list[24].main.temp,\n                    dayAfterTomorrow_pressure:\n                        response[1].list[24].main.pressure,\n                    dayAfterTomorrow_wind: response[1].list[24].wind.speed,\n                    dayAfterTomorrow_icon: response[1].list[24].weather[0].icon\n                }));\n            })\n\n            .catch(\n                err => console.log(err),\n                this.setState(prevState => ({\n                    err: true,\n                    city: prevState.value\n                }))\n            );\n    };\n\n    // fetch(Api)\n    // fetch(ApiForecast)\n    //     .then(response => {\n\n    //         if (response.ok) {\n    //             return response\n\n    //         }\n    //         throw Error('lipa');\n    //     })\n    // .then(response => response.json())\n    // .then(data => {\n    //     console.log(data);\n\n    //     const time = new Date().toLocaleString();\n\n    //     this.setState(prevState => ({\n    //         err: false,\n\n    //         date: time,\n\n    //         sunrise: data.list[0].sys.sunrise,\n    //         sunset: data.list[0].sys.sunset,\n    //         temp: data.list[0].main.temp,\n    //         pressure: data.list[0].main.pressure,\n    //         wind: data.list[0].wind.speed,\n    //         windDeg: data.list[0].wind.deg,\n    //         icon: data.list[0].weather[0].icon,\n    //         city: prevState.value,\n    //         temp_max: data.list[0].main.temp_max,\n    //         temp_min: data.list[0].main.temp_min\n    //     }));\n    // })\n\n    render() {\n        return (\n            <div>\n                <Form\n                    value={this.state.value}\n                    change={this.handleTextChange}\n                    submit={this.handleCitySubmit}\n                />\n                <Result weather={this.state} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}